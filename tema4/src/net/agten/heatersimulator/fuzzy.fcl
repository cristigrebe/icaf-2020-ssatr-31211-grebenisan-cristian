FUNCTION_BLOCK Fuzzy_FB

VAR_INPUT
temp_now : REAL;
temp_target:REAL;
END_VAR

VAR_OUTPUT
power : REAL;
END_VAR

FUZZIFY temp_now
	TERM cold := (-200, 1) (-10, 0) ;
	TERM med := (-40, 0) (-30,1) (30,1) (40,0);
	TERM hot := (30, 0) (255, 1);
END_FUZZIFY

FUZZIFY temp_target
	TERM minT := (0, 1) (50, 0) ;
    TERM medT_min := (50,0) (100,1)  (150,0);
    TERM medT_max:= (150,0) (200,1)  (250,0);
    TERM maxT := (250, 0) (300, 1);
END_FUZZIFY

DEFUZZIFY power
	TERM low := (0,0) (40,1) (80,0);
	TERM average := (80,0) (115,1) (150,0);
	TERM high := (150,0) (165,1) (180,0);
	METHOD : COG;		// Use 'Center Of Gravity' defuzzification method
	DEFAULT := 0;		// Default value is 0 (if no rule activates defuzzifier)
END_DEFUZZIFY

RULEBLOCK No1
	AND : MIN;			// Use 'min' for 'and' (also implicit use 'max' for 'or' to fulfill DeMorgan's Law)
	ACT : MIN;			// Use 'min' activation method
	ACCU : MAX;			// Use 'max' accumulation method

	RULE 1 : IF temp_now IS cold AND temp_target IS minT THEN power IS  high;
    RULE 2 : IF temp_now IS cold AND temp_target IS medT_min THEN power IS  high;
    RULE 3 : IF temp_now IS cold AND temp_target IS medT_max THEN power IS  average;
    RULE 4 : IF temp_now IS cold AND temp_target IS maxT THEN power IS  average;

    RULE 5 : IF temp_now IS med AND temp_target IS minT THEN power IS average;
    RULE 6 : IF temp_now IS med AND temp_target IS medT_min THEN power IS average;
    RULE 7 : IF temp_now IS med AND temp_target IS medT_max THEN power IS average;
    RULE 8 : IF temp_now IS med AND temp_target IS maxT THEN power IS average;

    RULE 9 : IF temp_now IS hot AND temp_target IS minT  THEN power IS average;
    RULE 10 : IF temp_now IS hot AND temp_target IS medT_min THEN power IS average;
    RULE 11 : IF temp_now IS hot AND temp_target IS medT_max THEN power IS low;
    RULE 12 : IF temp_now IS hot AND temp_target IS maxT THEN power IS low;
END_RULEBLOCK


END_FUNCTION_BLOCK
